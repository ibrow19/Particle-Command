package force;

import processing.core.PVector;
import gameobject.BlackHole;
import gameobject.PhysicsObject;

/// Gravitational force generated by a black hole.
public class HoleGravity extends ForceGenerator {

    /// Black Hole that is emitting the gravitational force.
    private final BlackHole mBlackHole;

    // Gravitational constant.
    private final float mGravity;

    /// Initialise associated black hole and gravitational constant to use.
    public HoleGravity(BlackHole blackHole, float gravity) {

        mBlackHole = blackHole;
        mGravity = gravity;

    }

    /// Generate force towards black hole based on object's distance from it.
    /// \param object the game object to calculate the force for.
    /// \return the force that should be applied to the object.
    public PVector generateForce(PhysicsObject object) {

        // Only apply force while black hole is not destroyed.
        if (mBlackHole.isDestroyed()) {

            deactivate();
            return new PVector(0f, 0f);

        } else {

            PVector position = object.getTranslation();
            PVector distance = PVector.sub(mBlackHole.getTranslation(), object.getTranslation());

            // Calculate force towards black hole using (Gm1m2)/d^2
            float force = 
            (mGravity * mBlackHole.getMass() * object.getMass()) / (float)Math.pow(distance.mag(), 2);
            return distance.setMag(force);

        }

    }

}
